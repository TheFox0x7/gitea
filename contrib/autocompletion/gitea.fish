# gitea fish shell completion

function __fish_gitea_no_subcommand --description 'Test if there has been any subcommand yet'
    for i in (commandline -opc)
        if contains -- $i help h web serv hook keys dump admin migrate doctor manager embedded migrate-storage dump-repo restore-repo actions cert generate docs completion
            return 1
        end
    end
    return 0
end

complete -c gitea -n '__fish_gitea_no_subcommand' -f -l custom-path -s C -r -d 'Set custom path (defaults to \'{WorkPath}/custom\')'
complete -c gitea -n '__fish_gitea_no_subcommand' -f -l config -s c -r -d 'Set custom config file (defaults to \'{WorkPath}/custom/conf/app.ini\')'
complete -c gitea -n '__fish_gitea_no_subcommand' -f -l work-path -s w -r -d 'Set Gitea\'s working path (defaults to the Gitea\'s binary directory)'
complete -c gitea -n '__fish_gitea_no_subcommand' -f -l help -s h -d 'show help'
complete -c gitea -n '__fish_gitea_no_subcommand' -f -l version -s v -d 'print the version'
complete -x -c gitea -n '__fish_gitea_no_subcommand' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c gitea -n '__fish_seen_subcommand_from help h' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from help h; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_gitea_no_subcommand' -a 'web' -d 'Start Gitea web server'
complete -c gitea -n '__fish_seen_subcommand_from web' -f -l port -s p -r -d 'Temporary port number to prevent conflict'
complete -c gitea -n '__fish_seen_subcommand_from web' -f -l install-port -r -d 'Temporary port number to run the install page on to prevent conflict'
complete -c gitea -n '__fish_seen_subcommand_from web' -f -l pid -s P -r -d 'Custom pid file path'
complete -c gitea -n '__fish_seen_subcommand_from web' -f -l quiet -s q -d 'Only display Fatal logging errors until logging is set-up'
complete -c gitea -n '__fish_seen_subcommand_from web' -f -l verbose -d 'Set initial logging to TRACE level until logging is properly set-up'
complete -c gitea -n '__fish_seen_subcommand_from web' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from web; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c gitea -n '__fish_seen_subcommand_from serv' -f -l enable-pprof
complete -c gitea -n '__fish_seen_subcommand_from serv' -f -l debug
complete -c gitea -n '__fish_seen_subcommand_from serv' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from serv; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c gitea -n '__fish_seen_subcommand_from hook' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from hook; and not __fish_seen_subcommand_from pre-receive update post-receive proc-receive help h' -a 'pre-receive' -d 'Delegate pre-receive Git hook'
complete -c gitea -n '__fish_seen_subcommand_from pre-receive' -f -l debug
complete -c gitea -n '__fish_seen_subcommand_from pre-receive' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from pre-receive; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from hook; and not __fish_seen_subcommand_from pre-receive update post-receive proc-receive help h' -a 'update' -d 'Delegate update Git hook'
complete -c gitea -n '__fish_seen_subcommand_from update' -f -l debug
complete -c gitea -n '__fish_seen_subcommand_from update' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from update; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from hook; and not __fish_seen_subcommand_from pre-receive update post-receive proc-receive help h' -a 'post-receive' -d 'Delegate post-receive Git hook'
complete -c gitea -n '__fish_seen_subcommand_from post-receive' -f -l debug
complete -c gitea -n '__fish_seen_subcommand_from post-receive' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from post-receive; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from hook; and not __fish_seen_subcommand_from pre-receive update post-receive proc-receive help h' -a 'proc-receive' -d 'Delegate proc-receive Git hook'
complete -c gitea -n '__fish_seen_subcommand_from proc-receive' -f -l debug
complete -c gitea -n '__fish_seen_subcommand_from proc-receive' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from proc-receive; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from hook; and not __fish_seen_subcommand_from pre-receive update post-receive proc-receive help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c gitea -n '__fish_seen_subcommand_from keys' -f -l expected -s e -r -d 'Expected user for whom provide key commands'
complete -c gitea -n '__fish_seen_subcommand_from keys' -f -l username -s u -r -d 'Username trying to log in by SSH'
complete -c gitea -n '__fish_seen_subcommand_from keys' -f -l type -s t -r -d 'Type of the SSH key provided to the SSH Server (requires content to be provided too)'
complete -c gitea -n '__fish_seen_subcommand_from keys' -f -l content -s k -r -d 'Base64 encoded content of the SSH key provided to the SSH Server (requires type to be provided too)'
complete -c gitea -n '__fish_seen_subcommand_from keys' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from keys; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_gitea_no_subcommand' -a 'dump' -d 'Dump Gitea files and database'
complete -c gitea -n '__fish_seen_subcommand_from dump' -f -l file -s f -r -d 'Name of the dump file which will be created, default to "gitea-dump-{time}.zip". Supply \'-\' for stdout. See type for available types.'
complete -c gitea -n '__fish_seen_subcommand_from dump' -f -l verbose -s V -d 'Show process details'
complete -c gitea -n '__fish_seen_subcommand_from dump' -f -l quiet -s q -d 'Only display warnings and errors'
complete -c gitea -n '__fish_seen_subcommand_from dump' -f -l tempdir -s t -r -d 'Temporary dir path'
complete -c gitea -n '__fish_seen_subcommand_from dump' -f -l database -s d -r -d 'Specify the database SQL syntax: sqlite3, mysql, mssql, postgres'
complete -c gitea -n '__fish_seen_subcommand_from dump' -f -l skip-repository -s R -d 'Skip the repository dumping'
complete -c gitea -n '__fish_seen_subcommand_from dump' -f -l skip-log -s L -d 'Skip the log dumping'
complete -c gitea -n '__fish_seen_subcommand_from dump' -f -l skip-custom-dir -d 'Skip custom directory'
complete -c gitea -n '__fish_seen_subcommand_from dump' -f -l skip-lfs-data -d 'Skip LFS data'
complete -c gitea -n '__fish_seen_subcommand_from dump' -f -l skip-attachment-data -d 'Skip attachment data'
complete -c gitea -n '__fish_seen_subcommand_from dump' -f -l skip-package-data -d 'Skip package data'
complete -c gitea -n '__fish_seen_subcommand_from dump' -f -l skip-index -d 'Skip bleve index data'
complete -c gitea -n '__fish_seen_subcommand_from dump' -f -l skip-db -d 'Skip database'
complete -c gitea -n '__fish_seen_subcommand_from dump' -f -l type -r -d 'Dump output format, default to "zip", supported types: zip, tar, tar.sz, tar.gz, tar.xz, tar.bz2, tar.br, tar.lz4, tar.zst'
complete -c gitea -n '__fish_seen_subcommand_from dump' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from dump; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_gitea_no_subcommand' -a 'admin' -d 'Perform common administrative operations'
complete -c gitea -n '__fish_seen_subcommand_from admin' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from admin; and not __fish_seen_subcommand_from user repo-sync-releases regenerate auth sendmail help h' -a 'user' -d 'Modify users'
complete -c gitea -n '__fish_seen_subcommand_from user' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from user; and not __fish_seen_subcommand_from create list change-password delete generate-access-token must-change-password help h' -a 'create' -d 'Create a new user in database'
complete -c gitea -n '__fish_seen_subcommand_from create' -f -l user-type -r -d 'Set user\'s type: individual or bot'
complete -c gitea -n '__fish_seen_subcommand_from create' -f -l password -r -d 'User password'
complete -c gitea -n '__fish_seen_subcommand_from create' -f -l email -r -d 'User email address'
complete -c gitea -n '__fish_seen_subcommand_from create' -f -l admin -d 'User is an admin'
complete -c gitea -n '__fish_seen_subcommand_from create' -f -l random-password -d 'Generate a random password for the user'
complete -c gitea -n '__fish_seen_subcommand_from create' -f -l must-change-password -d 'User must change password after initial login, defaults to true for all users except the first one (can be disabled by --must-change-password=false)'
complete -c gitea -n '__fish_seen_subcommand_from create' -f -l random-password-length -r -d 'Length of the random password to be generated'
complete -c gitea -n '__fish_seen_subcommand_from create' -f -l access-token -d 'Generate access token for the user'
complete -c gitea -n '__fish_seen_subcommand_from create' -f -l access-token-name -r -d 'Name of the generated access token'
complete -c gitea -n '__fish_seen_subcommand_from create' -f -l access-token-scopes -r -d 'Scopes of the generated access token, comma separated. Examples: "all", "public-only,read:issue", "write:repository,write:user"'
complete -c gitea -n '__fish_seen_subcommand_from create' -f -l restricted -d 'Make a restricted user account'
complete -c gitea -n '__fish_seen_subcommand_from create' -f -l fullname -r -d 'The full, human-readable name of the user'
complete -c gitea -n '__fish_seen_subcommand_from create' -f -l help -s h -d 'show help'
complete -c gitea -n '__fish_seen_subcommand_from create' -f -l name -r -d 'Username. DEPRECATED: use username instead'
complete -c gitea -n '__fish_seen_subcommand_from create' -f -l username -r -d 'Username'
complete -x -c gitea -n '__fish_seen_subcommand_from create; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from user; and not __fish_seen_subcommand_from create list change-password delete generate-access-token must-change-password help h' -a 'list' -d 'List users'
complete -c gitea -n '__fish_seen_subcommand_from list' -f -l admin -d 'List only admin users'
complete -c gitea -n '__fish_seen_subcommand_from list' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from list; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from user; and not __fish_seen_subcommand_from create list change-password delete generate-access-token must-change-password help h' -a 'change-password' -d 'Change a user\'s password'
complete -c gitea -n '__fish_seen_subcommand_from change-password' -f -l username -s u -r -d 'The user to change password for'
complete -c gitea -n '__fish_seen_subcommand_from change-password' -f -l password -s p -r -d 'New password to set for user'
complete -c gitea -n '__fish_seen_subcommand_from change-password' -f -l must-change-password -d 'User must change password (can be disabled by --must-change-password=false)'
complete -c gitea -n '__fish_seen_subcommand_from change-password' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from change-password; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from user; and not __fish_seen_subcommand_from create list change-password delete generate-access-token must-change-password help h' -a 'delete' -d 'Delete specific user by id, name or email'
complete -c gitea -n '__fish_seen_subcommand_from delete' -f -l id -r -d 'ID of user of the user to delete'
complete -c gitea -n '__fish_seen_subcommand_from delete' -f -l username -s u -r -d 'Username of the user to delete'
complete -c gitea -n '__fish_seen_subcommand_from delete' -f -l email -s e -r -d 'Email of the user to delete'
complete -c gitea -n '__fish_seen_subcommand_from delete' -f -l purge -d 'Purge user, all their repositories, organizations and comments'
complete -c gitea -n '__fish_seen_subcommand_from delete' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from delete; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from user; and not __fish_seen_subcommand_from create list change-password delete generate-access-token must-change-password help h' -a 'generate-access-token' -d 'Generate an access token for a specific user'
complete -c gitea -n '__fish_seen_subcommand_from generate-access-token' -f -l username -s u -r -d 'Username'
complete -c gitea -n '__fish_seen_subcommand_from generate-access-token' -f -l token-name -s t -r -d 'Token name'
complete -c gitea -n '__fish_seen_subcommand_from generate-access-token' -f -l raw -d 'Display only the token value'
complete -c gitea -n '__fish_seen_subcommand_from generate-access-token' -f -l scopes -r -d 'Comma separated list of scopes to apply to access token, examples: "all", "public-only,read:issue", "write:repository,write:user"'
complete -c gitea -n '__fish_seen_subcommand_from generate-access-token' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from generate-access-token; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from user; and not __fish_seen_subcommand_from create list change-password delete generate-access-token must-change-password help h' -a 'must-change-password' -d 'Set the must change password flag for the provided users or all users'
complete -c gitea -n '__fish_seen_subcommand_from must-change-password' -f -l all -s A -d 'All users must change password, except those explicitly excluded with --exclude'
complete -c gitea -n '__fish_seen_subcommand_from must-change-password' -f -l exclude -s e -r -d 'Do not change the must-change-password flag for these users'
complete -c gitea -n '__fish_seen_subcommand_from must-change-password' -f -l unset -d 'Instead of setting the must-change-password flag, unset it'
complete -c gitea -n '__fish_seen_subcommand_from must-change-password' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from must-change-password; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from user; and not __fish_seen_subcommand_from create list change-password delete generate-access-token must-change-password help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from admin; and not __fish_seen_subcommand_from user repo-sync-releases regenerate auth sendmail help h' -a 'repo-sync-releases' -d 'Synchronize repository releases with tags'
complete -c gitea -n '__fish_seen_subcommand_from repo-sync-releases' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from repo-sync-releases; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from admin; and not __fish_seen_subcommand_from user repo-sync-releases regenerate auth sendmail help h' -a 'regenerate' -d 'Regenerate specific files'
complete -c gitea -n '__fish_seen_subcommand_from regenerate' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from regenerate; and not __fish_seen_subcommand_from hooks keys help h' -a 'hooks' -d 'Regenerate git-hooks'
complete -c gitea -n '__fish_seen_subcommand_from hooks' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from hooks; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from regenerate; and not __fish_seen_subcommand_from hooks keys help h' -a 'keys' -d 'Regenerate authorized_keys file'
complete -c gitea -n '__fish_seen_subcommand_from keys' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from keys; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from regenerate; and not __fish_seen_subcommand_from hooks keys help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from admin; and not __fish_seen_subcommand_from user repo-sync-releases regenerate auth sendmail help h' -a 'auth' -d 'Modify external auth providers'
complete -c gitea -n '__fish_seen_subcommand_from auth' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from auth; and not __fish_seen_subcommand_from add-oauth update-oauth add-ldap update-ldap add-ldap-simple update-ldap-simple add-smtp update-smtp list delete help h' -a 'add-oauth' -d 'Add new Oauth authentication source'
complete -c gitea -n '__fish_seen_subcommand_from add-oauth' -f -l name -r -d 'Application Name'
complete -c gitea -n '__fish_seen_subcommand_from add-oauth' -f -l provider -r -d 'OAuth2 Provider'
complete -c gitea -n '__fish_seen_subcommand_from add-oauth' -f -l key -r -d 'Client ID (Key)'
complete -c gitea -n '__fish_seen_subcommand_from add-oauth' -f -l secret -r -d 'Client Secret'
complete -c gitea -n '__fish_seen_subcommand_from add-oauth' -f -l auto-discover-url -r -d 'OpenID Connect Auto Discovery URL (only required when using OpenID Connect as provider)'
complete -c gitea -n '__fish_seen_subcommand_from add-oauth' -f -l use-custom-urls -r -d 'Use custom URLs for GitLab/GitHub OAuth endpoints'
complete -c gitea -n '__fish_seen_subcommand_from add-oauth' -f -l custom-tenant-id -r -d 'Use custom Tenant ID for OAuth endpoints'
complete -c gitea -n '__fish_seen_subcommand_from add-oauth' -f -l custom-auth-url -r -d 'Use a custom Authorization URL (option for GitLab/GitHub)'
complete -c gitea -n '__fish_seen_subcommand_from add-oauth' -f -l custom-token-url -r -d 'Use a custom Token URL (option for GitLab/GitHub)'
complete -c gitea -n '__fish_seen_subcommand_from add-oauth' -f -l custom-profile-url -r -d 'Use a custom Profile URL (option for GitLab/GitHub)'
complete -c gitea -n '__fish_seen_subcommand_from add-oauth' -f -l custom-email-url -r -d 'Use a custom Email URL (option for GitHub)'
complete -c gitea -n '__fish_seen_subcommand_from add-oauth' -f -l icon-url -r -d 'Custom icon URL for OAuth2 login source'
complete -c gitea -n '__fish_seen_subcommand_from add-oauth' -f -l skip-local-2fa -d 'Set to true to skip local 2fa for users authenticated by this source'
complete -c gitea -n '__fish_seen_subcommand_from add-oauth' -f -l scopes -r -d 'Scopes to request when to authenticate against this OAuth2 source'
complete -c gitea -n '__fish_seen_subcommand_from add-oauth' -f -l required-claim-name -r -d 'Claim name that has to be set to allow users to login with this source'
complete -c gitea -n '__fish_seen_subcommand_from add-oauth' -f -l required-claim-value -r -d 'Claim value that has to be set to allow users to login with this source'
complete -c gitea -n '__fish_seen_subcommand_from add-oauth' -f -l group-claim-name -r -d 'Claim name providing group names for this source'
complete -c gitea -n '__fish_seen_subcommand_from add-oauth' -f -l admin-group -r -d 'Group Claim value for administrator users'
complete -c gitea -n '__fish_seen_subcommand_from add-oauth' -f -l restricted-group -r -d 'Group Claim value for restricted users'
complete -c gitea -n '__fish_seen_subcommand_from add-oauth' -f -l group-team-map -r -d 'JSON mapping between groups and org teams'
complete -c gitea -n '__fish_seen_subcommand_from add-oauth' -f -l group-team-map-removal -d 'Activate automatic team membership removal depending on groups'
complete -c gitea -n '__fish_seen_subcommand_from add-oauth' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from add-oauth; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from auth; and not __fish_seen_subcommand_from add-oauth update-oauth add-ldap update-ldap add-ldap-simple update-ldap-simple add-smtp update-smtp list delete help h' -a 'update-oauth' -d 'Update existing Oauth authentication source'
complete -c gitea -n '__fish_seen_subcommand_from update-oauth' -f -l name -r -d 'Application Name'
complete -c gitea -n '__fish_seen_subcommand_from update-oauth' -f -l id -r -d 'ID of authentication source'
complete -c gitea -n '__fish_seen_subcommand_from update-oauth' -f -l provider -r -d 'OAuth2 Provider'
complete -c gitea -n '__fish_seen_subcommand_from update-oauth' -f -l key -r -d 'Client ID (Key)'
complete -c gitea -n '__fish_seen_subcommand_from update-oauth' -f -l secret -r -d 'Client Secret'
complete -c gitea -n '__fish_seen_subcommand_from update-oauth' -f -l auto-discover-url -r -d 'OpenID Connect Auto Discovery URL (only required when using OpenID Connect as provider)'
complete -c gitea -n '__fish_seen_subcommand_from update-oauth' -f -l use-custom-urls -r -d 'Use custom URLs for GitLab/GitHub OAuth endpoints'
complete -c gitea -n '__fish_seen_subcommand_from update-oauth' -f -l custom-tenant-id -r -d 'Use custom Tenant ID for OAuth endpoints'
complete -c gitea -n '__fish_seen_subcommand_from update-oauth' -f -l custom-auth-url -r -d 'Use a custom Authorization URL (option for GitLab/GitHub)'
complete -c gitea -n '__fish_seen_subcommand_from update-oauth' -f -l custom-token-url -r -d 'Use a custom Token URL (option for GitLab/GitHub)'
complete -c gitea -n '__fish_seen_subcommand_from update-oauth' -f -l custom-profile-url -r -d 'Use a custom Profile URL (option for GitLab/GitHub)'
complete -c gitea -n '__fish_seen_subcommand_from update-oauth' -f -l custom-email-url -r -d 'Use a custom Email URL (option for GitHub)'
complete -c gitea -n '__fish_seen_subcommand_from update-oauth' -f -l icon-url -r -d 'Custom icon URL for OAuth2 login source'
complete -c gitea -n '__fish_seen_subcommand_from update-oauth' -f -l skip-local-2fa -d 'Set to true to skip local 2fa for users authenticated by this source'
complete -c gitea -n '__fish_seen_subcommand_from update-oauth' -f -l scopes -r -d 'Scopes to request when to authenticate against this OAuth2 source'
complete -c gitea -n '__fish_seen_subcommand_from update-oauth' -f -l required-claim-name -r -d 'Claim name that has to be set to allow users to login with this source'
complete -c gitea -n '__fish_seen_subcommand_from update-oauth' -f -l required-claim-value -r -d 'Claim value that has to be set to allow users to login with this source'
complete -c gitea -n '__fish_seen_subcommand_from update-oauth' -f -l group-claim-name -r -d 'Claim name providing group names for this source'
complete -c gitea -n '__fish_seen_subcommand_from update-oauth' -f -l admin-group -r -d 'Group Claim value for administrator users'
complete -c gitea -n '__fish_seen_subcommand_from update-oauth' -f -l restricted-group -r -d 'Group Claim value for restricted users'
complete -c gitea -n '__fish_seen_subcommand_from update-oauth' -f -l group-team-map -r -d 'JSON mapping between groups and org teams'
complete -c gitea -n '__fish_seen_subcommand_from update-oauth' -f -l group-team-map-removal -d 'Activate automatic team membership removal depending on groups'
complete -c gitea -n '__fish_seen_subcommand_from update-oauth' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from update-oauth; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from auth; and not __fish_seen_subcommand_from add-oauth update-oauth add-ldap update-ldap add-ldap-simple update-ldap-simple add-smtp update-smtp list delete help h' -a 'add-ldap' -d 'Add new LDAP (via Bind DN) authentication source'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap' -f -l name -r -d 'Authentication name.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap' -f -l not-active -d 'Deactivate the authentication source.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap' -f -l active -d 'Activate the authentication source.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap' -f -l security-protocol -r -d 'Security protocol name.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap' -f -l skip-tls-verify -d 'Disable TLS verification.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap' -f -l host -r -d 'The address where the LDAP server can be reached.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap' -f -l port -r -d 'The port to use when connecting to the LDAP server.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap' -f -l user-search-base -r -d 'The LDAP base at which user accounts will be searched for.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap' -f -l user-filter -r -d 'An LDAP filter declaring how to find the user record that is attempting to authenticate.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap' -f -l admin-filter -r -d 'An LDAP filter specifying if a user should be given administrator privileges.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap' -f -l restricted-filter -r -d 'An LDAP filter specifying if a user should be given restricted status.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap' -f -l allow-deactivate-all -d 'Allow empty search results to deactivate all users.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap' -f -l username-attribute -r -d 'The attribute of the user’s LDAP record containing the user name.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap' -f -l firstname-attribute -r -d 'The attribute of the user’s LDAP record containing the user’s first name.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap' -f -l surname-attribute -r -d 'The attribute of the user’s LDAP record containing the user’s surname.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap' -f -l email-attribute -r -d 'The attribute of the user’s LDAP record containing the user’s email address.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap' -f -l public-ssh-key-attribute -r -d 'The attribute of the user’s LDAP record containing the user’s public ssh key.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap' -f -l skip-local-2fa -d 'Set to true to skip local 2fa for users authenticated by this source'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap' -f -l avatar-attribute -r -d 'The attribute of the user’s LDAP record containing the user’s avatar.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap' -f -l bind-dn -r -d 'The DN to bind to the LDAP server with when searching for the user.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap' -f -l bind-password -r -d 'The password for the Bind DN, if any.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap' -f -l attributes-in-bind -d 'Fetch attributes in bind DN context.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap' -f -l synchronize-users -d 'Enable user synchronization.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap' -f -l disable-synchronize-users -d 'Disable user synchronization.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap' -f -l page-size -r -d 'Search page size.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap' -f -l enable-groups -d 'Enable LDAP groups'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap' -f -l group-search-base-dn -r -d 'The LDAP base DN at which group accounts will be searched for'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap' -f -l group-member-attribute -r -d 'Group attribute containing list of users'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap' -f -l group-user-attribute -r -d 'User attribute listed in group'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap' -f -l group-filter -r -d 'Verify group membership in LDAP'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap' -f -l group-team-map -r -d 'Map LDAP groups to Organization teams'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap' -f -l group-team-map-removal -d 'Remove users from synchronized teams if user does not belong to corresponding LDAP group'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from add-ldap; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from auth; and not __fish_seen_subcommand_from add-oauth update-oauth add-ldap update-ldap add-ldap-simple update-ldap-simple add-smtp update-smtp list delete help h' -a 'update-ldap' -d 'Update existing LDAP (via Bind DN) authentication source'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l id -r -d 'ID of authentication source'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l name -r -d 'Authentication name.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l not-active -d 'Deactivate the authentication source.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l active -d 'Activate the authentication source.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l security-protocol -r -d 'Security protocol name.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l skip-tls-verify -d 'Disable TLS verification.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l host -r -d 'The address where the LDAP server can be reached.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l port -r -d 'The port to use when connecting to the LDAP server.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l user-search-base -r -d 'The LDAP base at which user accounts will be searched for.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l user-filter -r -d 'An LDAP filter declaring how to find the user record that is attempting to authenticate.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l admin-filter -r -d 'An LDAP filter specifying if a user should be given administrator privileges.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l restricted-filter -r -d 'An LDAP filter specifying if a user should be given restricted status.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l allow-deactivate-all -d 'Allow empty search results to deactivate all users.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l username-attribute -r -d 'The attribute of the user’s LDAP record containing the user name.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l firstname-attribute -r -d 'The attribute of the user’s LDAP record containing the user’s first name.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l surname-attribute -r -d 'The attribute of the user’s LDAP record containing the user’s surname.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l email-attribute -r -d 'The attribute of the user’s LDAP record containing the user’s email address.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l public-ssh-key-attribute -r -d 'The attribute of the user’s LDAP record containing the user’s public ssh key.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l skip-local-2fa -d 'Set to true to skip local 2fa for users authenticated by this source'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l avatar-attribute -r -d 'The attribute of the user’s LDAP record containing the user’s avatar.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l bind-dn -r -d 'The DN to bind to the LDAP server with when searching for the user.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l bind-password -r -d 'The password for the Bind DN, if any.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l attributes-in-bind -d 'Fetch attributes in bind DN context.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l synchronize-users -d 'Enable user synchronization.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l disable-synchronize-users -d 'Disable user synchronization.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l page-size -r -d 'Search page size.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l enable-groups -d 'Enable LDAP groups'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l group-search-base-dn -r -d 'The LDAP base DN at which group accounts will be searched for'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l group-member-attribute -r -d 'Group attribute containing list of users'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l group-user-attribute -r -d 'User attribute listed in group'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l group-filter -r -d 'Verify group membership in LDAP'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l group-team-map -r -d 'Map LDAP groups to Organization teams'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l group-team-map-removal -d 'Remove users from synchronized teams if user does not belong to corresponding LDAP group'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from update-ldap; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from auth; and not __fish_seen_subcommand_from add-oauth update-oauth add-ldap update-ldap add-ldap-simple update-ldap-simple add-smtp update-smtp list delete help h' -a 'add-ldap-simple' -d 'Add new LDAP (simple auth) authentication source'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap-simple' -f -l name -r -d 'Authentication name.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap-simple' -f -l not-active -d 'Deactivate the authentication source.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap-simple' -f -l active -d 'Activate the authentication source.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap-simple' -f -l security-protocol -r -d 'Security protocol name.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap-simple' -f -l skip-tls-verify -d 'Disable TLS verification.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap-simple' -f -l host -r -d 'The address where the LDAP server can be reached.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap-simple' -f -l port -r -d 'The port to use when connecting to the LDAP server.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap-simple' -f -l user-search-base -r -d 'The LDAP base at which user accounts will be searched for.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap-simple' -f -l user-filter -r -d 'An LDAP filter declaring how to find the user record that is attempting to authenticate.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap-simple' -f -l admin-filter -r -d 'An LDAP filter specifying if a user should be given administrator privileges.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap-simple' -f -l restricted-filter -r -d 'An LDAP filter specifying if a user should be given restricted status.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap-simple' -f -l allow-deactivate-all -d 'Allow empty search results to deactivate all users.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap-simple' -f -l username-attribute -r -d 'The attribute of the user’s LDAP record containing the user name.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap-simple' -f -l firstname-attribute -r -d 'The attribute of the user’s LDAP record containing the user’s first name.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap-simple' -f -l surname-attribute -r -d 'The attribute of the user’s LDAP record containing the user’s surname.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap-simple' -f -l email-attribute -r -d 'The attribute of the user’s LDAP record containing the user’s email address.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap-simple' -f -l public-ssh-key-attribute -r -d 'The attribute of the user’s LDAP record containing the user’s public ssh key.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap-simple' -f -l skip-local-2fa -d 'Set to true to skip local 2fa for users authenticated by this source'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap-simple' -f -l avatar-attribute -r -d 'The attribute of the user’s LDAP record containing the user’s avatar.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap-simple' -f -l user-dn -r -d 'The user\'s DN.'
complete -c gitea -n '__fish_seen_subcommand_from add-ldap-simple' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from add-ldap-simple; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from auth; and not __fish_seen_subcommand_from add-oauth update-oauth add-ldap update-ldap add-ldap-simple update-ldap-simple add-smtp update-smtp list delete help h' -a 'update-ldap-simple' -d 'Update existing LDAP (simple auth) authentication source'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap-simple' -f -l id -r -d 'ID of authentication source'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap-simple' -f -l name -r -d 'Authentication name.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap-simple' -f -l not-active -d 'Deactivate the authentication source.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap-simple' -f -l active -d 'Activate the authentication source.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap-simple' -f -l security-protocol -r -d 'Security protocol name.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap-simple' -f -l skip-tls-verify -d 'Disable TLS verification.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap-simple' -f -l host -r -d 'The address where the LDAP server can be reached.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap-simple' -f -l port -r -d 'The port to use when connecting to the LDAP server.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap-simple' -f -l user-search-base -r -d 'The LDAP base at which user accounts will be searched for.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap-simple' -f -l user-filter -r -d 'An LDAP filter declaring how to find the user record that is attempting to authenticate.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap-simple' -f -l admin-filter -r -d 'An LDAP filter specifying if a user should be given administrator privileges.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap-simple' -f -l restricted-filter -r -d 'An LDAP filter specifying if a user should be given restricted status.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap-simple' -f -l allow-deactivate-all -d 'Allow empty search results to deactivate all users.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap-simple' -f -l username-attribute -r -d 'The attribute of the user’s LDAP record containing the user name.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap-simple' -f -l firstname-attribute -r -d 'The attribute of the user’s LDAP record containing the user’s first name.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap-simple' -f -l surname-attribute -r -d 'The attribute of the user’s LDAP record containing the user’s surname.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap-simple' -f -l email-attribute -r -d 'The attribute of the user’s LDAP record containing the user’s email address.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap-simple' -f -l public-ssh-key-attribute -r -d 'The attribute of the user’s LDAP record containing the user’s public ssh key.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap-simple' -f -l skip-local-2fa -d 'Set to true to skip local 2fa for users authenticated by this source'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap-simple' -f -l avatar-attribute -r -d 'The attribute of the user’s LDAP record containing the user’s avatar.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap-simple' -f -l user-dn -r -d 'The user\'s DN.'
complete -c gitea -n '__fish_seen_subcommand_from update-ldap-simple' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from update-ldap-simple; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from auth; and not __fish_seen_subcommand_from add-oauth update-oauth add-ldap update-ldap add-ldap-simple update-ldap-simple add-smtp update-smtp list delete help h' -a 'add-smtp' -d 'Add new SMTP authentication source'
complete -c gitea -n '__fish_seen_subcommand_from add-smtp' -f -l name -r -d 'Application Name'
complete -c gitea -n '__fish_seen_subcommand_from add-smtp' -f -l auth-type -r -d 'SMTP Authentication Type (PLAIN/LOGIN/CRAM-MD5) default PLAIN'
complete -c gitea -n '__fish_seen_subcommand_from add-smtp' -f -l host -r -d 'SMTP Host'
complete -c gitea -n '__fish_seen_subcommand_from add-smtp' -f -l port -r -d 'SMTP Port'
complete -c gitea -n '__fish_seen_subcommand_from add-smtp' -f -l force-smtps -d 'SMTPS is always used on port 465. Set this to force SMTPS on other ports.'
complete -c gitea -n '__fish_seen_subcommand_from add-smtp' -f -l skip-verify -d 'Skip TLS verify.'
complete -c gitea -n '__fish_seen_subcommand_from add-smtp' -f -l helo-hostname -r -d 'Hostname sent with HELO. Leave blank to send current hostname'
complete -c gitea -n '__fish_seen_subcommand_from add-smtp' -f -l disable-helo -d 'Disable SMTP helo.'
complete -c gitea -n '__fish_seen_subcommand_from add-smtp' -f -l allowed-domains -r -d 'Leave empty to allow all domains. Separate multiple domains with a comma (\',\')'
complete -c gitea -n '__fish_seen_subcommand_from add-smtp' -f -l skip-local-2fa -d 'Skip 2FA to log on.'
complete -c gitea -n '__fish_seen_subcommand_from add-smtp' -f -l active -d 'This Authentication Source is Activated.'
complete -c gitea -n '__fish_seen_subcommand_from add-smtp' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from add-smtp; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from auth; and not __fish_seen_subcommand_from add-oauth update-oauth add-ldap update-ldap add-ldap-simple update-ldap-simple add-smtp update-smtp list delete help h' -a 'update-smtp' -d 'Update existing SMTP authentication source'
complete -c gitea -n '__fish_seen_subcommand_from update-smtp' -f -l name -r -d 'Application Name'
complete -c gitea -n '__fish_seen_subcommand_from update-smtp' -f -l id -r -d 'ID of authentication source'
complete -c gitea -n '__fish_seen_subcommand_from update-smtp' -f -l auth-type -r -d 'SMTP Authentication Type (PLAIN/LOGIN/CRAM-MD5) default PLAIN'
complete -c gitea -n '__fish_seen_subcommand_from update-smtp' -f -l host -r -d 'SMTP Host'
complete -c gitea -n '__fish_seen_subcommand_from update-smtp' -f -l port -r -d 'SMTP Port'
complete -c gitea -n '__fish_seen_subcommand_from update-smtp' -f -l force-smtps -d 'SMTPS is always used on port 465. Set this to force SMTPS on other ports.'
complete -c gitea -n '__fish_seen_subcommand_from update-smtp' -f -l skip-verify -d 'Skip TLS verify.'
complete -c gitea -n '__fish_seen_subcommand_from update-smtp' -f -l helo-hostname -r -d 'Hostname sent with HELO. Leave blank to send current hostname'
complete -c gitea -n '__fish_seen_subcommand_from update-smtp' -f -l disable-helo -d 'Disable SMTP helo.'
complete -c gitea -n '__fish_seen_subcommand_from update-smtp' -f -l allowed-domains -r -d 'Leave empty to allow all domains. Separate multiple domains with a comma (\',\')'
complete -c gitea -n '__fish_seen_subcommand_from update-smtp' -f -l skip-local-2fa -d 'Skip 2FA to log on.'
complete -c gitea -n '__fish_seen_subcommand_from update-smtp' -f -l active -d 'This Authentication Source is Activated.'
complete -c gitea -n '__fish_seen_subcommand_from update-smtp' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from update-smtp; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from auth; and not __fish_seen_subcommand_from add-oauth update-oauth add-ldap update-ldap add-ldap-simple update-ldap-simple add-smtp update-smtp list delete help h' -a 'list' -d 'List auth sources'
complete -c gitea -n '__fish_seen_subcommand_from list' -f -l min-width -r -d 'Minimal cell width including any padding for the formatted table'
complete -c gitea -n '__fish_seen_subcommand_from list' -f -l tab-width -r -d 'width of tab characters in formatted table (equivalent number of spaces)'
complete -c gitea -n '__fish_seen_subcommand_from list' -f -l padding -r -d 'padding added to a cell before computing its width'
complete -c gitea -n '__fish_seen_subcommand_from list' -f -l pad-char -r -d 'ASCII char used for padding if padchar == \'\\t\', the Writer will assume that the width of a \'\\t\' in the formatted output is tabwidth, and cells are left-aligned independent of align_left (for correct-looking results, tabwidth must correspond to the tab width in the viewer displaying the result)'
complete -c gitea -n '__fish_seen_subcommand_from list' -f -l vertical-bars -d 'Set to true to print vertical bars between columns'
complete -c gitea -n '__fish_seen_subcommand_from list' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from list; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from auth; and not __fish_seen_subcommand_from add-oauth update-oauth add-ldap update-ldap add-ldap-simple update-ldap-simple add-smtp update-smtp list delete help h' -a 'delete' -d 'Delete specific auth source'
complete -c gitea -n '__fish_seen_subcommand_from delete' -f -l id -r -d 'ID of authentication source'
complete -c gitea -n '__fish_seen_subcommand_from delete' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from delete; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from auth; and not __fish_seen_subcommand_from add-oauth update-oauth add-ldap update-ldap add-ldap-simple update-ldap-simple add-smtp update-smtp list delete help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from admin; and not __fish_seen_subcommand_from user repo-sync-releases regenerate auth sendmail help h' -a 'sendmail' -d 'Send a message to all users'
complete -c gitea -n '__fish_seen_subcommand_from sendmail' -f -l title -r -d 'a title of a message'
complete -c gitea -n '__fish_seen_subcommand_from sendmail' -f -l content -r -d 'a content of a message'
complete -c gitea -n '__fish_seen_subcommand_from sendmail' -f -l force -s f -d 'A flag to bypass a confirmation step'
complete -c gitea -n '__fish_seen_subcommand_from sendmail' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from sendmail; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from admin; and not __fish_seen_subcommand_from user repo-sync-releases regenerate auth sendmail help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_gitea_no_subcommand' -a 'migrate' -d 'Migrate the database'
complete -c gitea -n '__fish_seen_subcommand_from migrate' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from migrate; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_gitea_no_subcommand' -a 'doctor' -d 'Diagnose and optionally fix problems, convert or re-create database tables'
complete -c gitea -n '__fish_seen_subcommand_from doctor' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from doctor; and not __fish_seen_subcommand_from check recreate-table convert help h' -a 'check' -d 'Diagnose and optionally fix problems'
complete -c gitea -n '__fish_seen_subcommand_from check' -f -l list -d 'List the available checks'
complete -c gitea -n '__fish_seen_subcommand_from check' -f -l default -d 'Run the default checks (if neither --run or --all is set, this is the default behaviour)'
complete -c gitea -n '__fish_seen_subcommand_from check' -f -l run -r -d 'Run the provided checks - (if --default is set, the default checks will also run)'
complete -c gitea -n '__fish_seen_subcommand_from check' -f -l all -d 'Run all the available checks'
complete -c gitea -n '__fish_seen_subcommand_from check' -f -l fix -d 'Automatically fix what we can'
complete -c gitea -n '__fish_seen_subcommand_from check' -f -l log-file -r -d 'Name of the log file (no verbose log output by default). Set to "-" to output to stdout'
complete -c gitea -n '__fish_seen_subcommand_from check' -f -l color -s H -d 'Use color for outputted information'
complete -c gitea -n '__fish_seen_subcommand_from check' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from check; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from doctor; and not __fish_seen_subcommand_from check recreate-table convert help h' -a 'recreate-table' -d 'Recreate tables from XORM definitions and copy the data.'
complete -c gitea -n '__fish_seen_subcommand_from recreate-table' -f -l debug -d 'Print SQL commands sent'
complete -c gitea -n '__fish_seen_subcommand_from recreate-table' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from recreate-table; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from doctor; and not __fish_seen_subcommand_from check recreate-table convert help h' -a 'convert' -d 'Convert the database'
complete -c gitea -n '__fish_seen_subcommand_from convert' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from convert; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from doctor; and not __fish_seen_subcommand_from check recreate-table convert help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_gitea_no_subcommand' -a 'manager' -d 'Manage the running gitea process'
complete -c gitea -n '__fish_seen_subcommand_from manager' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from manager; and not __fish_seen_subcommand_from shutdown restart reload-templates flush-queues logging processes help h' -a 'shutdown' -d 'Gracefully shutdown the running process'
complete -c gitea -n '__fish_seen_subcommand_from shutdown' -f -l debug
complete -c gitea -n '__fish_seen_subcommand_from shutdown' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from shutdown; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from manager; and not __fish_seen_subcommand_from shutdown restart reload-templates flush-queues logging processes help h' -a 'restart' -d 'Gracefully restart the running process - (not implemented for windows servers)'
complete -c gitea -n '__fish_seen_subcommand_from restart' -f -l debug
complete -c gitea -n '__fish_seen_subcommand_from restart' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from restart; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from manager; and not __fish_seen_subcommand_from shutdown restart reload-templates flush-queues logging processes help h' -a 'reload-templates' -d 'Reload template files in the running process'
complete -c gitea -n '__fish_seen_subcommand_from reload-templates' -f -l debug
complete -c gitea -n '__fish_seen_subcommand_from reload-templates' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from reload-templates; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from manager; and not __fish_seen_subcommand_from shutdown restart reload-templates flush-queues logging processes help h' -a 'flush-queues' -d 'Flush queues in the running process'
complete -c gitea -n '__fish_seen_subcommand_from flush-queues' -f -l timeout -r -d 'Timeout for the flushing process'
complete -c gitea -n '__fish_seen_subcommand_from flush-queues' -f -l non-blocking -d 'Set to true to not wait for flush to complete before returning'
complete -c gitea -n '__fish_seen_subcommand_from flush-queues' -f -l debug
complete -c gitea -n '__fish_seen_subcommand_from flush-queues' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from flush-queues; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from manager; and not __fish_seen_subcommand_from shutdown restart reload-templates flush-queues logging processes help h' -a 'logging' -d 'Adjust logging commands'
complete -c gitea -n '__fish_seen_subcommand_from logging' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from logging; and not __fish_seen_subcommand_from pause resume release-and-reopen remove add log-sql help h' -a 'pause' -d 'Pause logging (Gitea will buffer logs up to a certain point and will drop them after that point)'
complete -c gitea -n '__fish_seen_subcommand_from pause' -f -l debug
complete -c gitea -n '__fish_seen_subcommand_from pause' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from pause; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from logging; and not __fish_seen_subcommand_from pause resume release-and-reopen remove add log-sql help h' -a 'resume' -d 'Resume logging'
complete -c gitea -n '__fish_seen_subcommand_from resume' -f -l debug
complete -c gitea -n '__fish_seen_subcommand_from resume' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from resume; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from logging; and not __fish_seen_subcommand_from pause resume release-and-reopen remove add log-sql help h' -a 'release-and-reopen' -d 'Cause Gitea to release and re-open files used for logging'
complete -c gitea -n '__fish_seen_subcommand_from release-and-reopen' -f -l debug
complete -c gitea -n '__fish_seen_subcommand_from release-and-reopen' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from release-and-reopen; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from logging; and not __fish_seen_subcommand_from pause resume release-and-reopen remove add log-sql help h' -a 'remove' -d 'Remove a logger'
complete -c gitea -n '__fish_seen_subcommand_from remove' -f -l debug
complete -c gitea -n '__fish_seen_subcommand_from remove' -f -l logger -r -d 'Logger name - will default to "default"'
complete -c gitea -n '__fish_seen_subcommand_from remove' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from remove; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from logging; and not __fish_seen_subcommand_from pause resume release-and-reopen remove add log-sql help h' -a 'add' -d 'Add a logger'
complete -c gitea -n '__fish_seen_subcommand_from add' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from add; and not __fish_seen_subcommand_from file conn help h' -a 'file' -d 'Add a file logger'
complete -c gitea -n '__fish_seen_subcommand_from file' -f -l logger -r -d 'Logger name - will default to "default"'
complete -c gitea -n '__fish_seen_subcommand_from file' -f -l writer -r -d 'Name of the log writer - will default to mode'
complete -c gitea -n '__fish_seen_subcommand_from file' -f -l level -r -d 'Logging level for the new logger'
complete -c gitea -n '__fish_seen_subcommand_from file' -f -l stacktrace-level -s L -r -d 'Stacktrace logging level'
complete -c gitea -n '__fish_seen_subcommand_from file' -f -l flags -s F -r -d 'Flags for the logger'
complete -c gitea -n '__fish_seen_subcommand_from file' -f -l expression -s e -r -d 'Matching expression for the logger'
complete -c gitea -n '__fish_seen_subcommand_from file' -f -l prefix -s p -r -d 'Prefix for the logger'
complete -c gitea -n '__fish_seen_subcommand_from file' -f -l color -d 'Use color in the logs'
complete -c gitea -n '__fish_seen_subcommand_from file' -f -l debug
complete -c gitea -n '__fish_seen_subcommand_from file' -f -l filename -s f -r -d 'Filename for the logger - this must be set.'
complete -c gitea -n '__fish_seen_subcommand_from file' -f -l rotate -s r -d 'Rotate logs'
complete -c gitea -n '__fish_seen_subcommand_from file' -f -l max-size -s s -r -d 'Maximum size in bytes before rotation'
complete -c gitea -n '__fish_seen_subcommand_from file' -f -l daily -s d -d 'Rotate logs daily'
complete -c gitea -n '__fish_seen_subcommand_from file' -f -l max-days -s D -r -d 'Maximum number of daily logs to keep'
complete -c gitea -n '__fish_seen_subcommand_from file' -f -l compress -s z -d 'Compress rotated logs'
complete -c gitea -n '__fish_seen_subcommand_from file' -f -l compression-level -s Z -r -d 'Compression level to use'
complete -c gitea -n '__fish_seen_subcommand_from file' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from file; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from add; and not __fish_seen_subcommand_from file conn help h' -a 'conn' -d 'Add a net conn logger'
complete -c gitea -n '__fish_seen_subcommand_from conn' -f -l logger -r -d 'Logger name - will default to "default"'
complete -c gitea -n '__fish_seen_subcommand_from conn' -f -l writer -r -d 'Name of the log writer - will default to mode'
complete -c gitea -n '__fish_seen_subcommand_from conn' -f -l level -r -d 'Logging level for the new logger'
complete -c gitea -n '__fish_seen_subcommand_from conn' -f -l stacktrace-level -s L -r -d 'Stacktrace logging level'
complete -c gitea -n '__fish_seen_subcommand_from conn' -f -l flags -s F -r -d 'Flags for the logger'
complete -c gitea -n '__fish_seen_subcommand_from conn' -f -l expression -s e -r -d 'Matching expression for the logger'
complete -c gitea -n '__fish_seen_subcommand_from conn' -f -l prefix -s p -r -d 'Prefix for the logger'
complete -c gitea -n '__fish_seen_subcommand_from conn' -f -l color -d 'Use color in the logs'
complete -c gitea -n '__fish_seen_subcommand_from conn' -f -l debug
complete -c gitea -n '__fish_seen_subcommand_from conn' -f -l reconnect-on-message -s R -d 'Reconnect to host for every message'
complete -c gitea -n '__fish_seen_subcommand_from conn' -f -l reconnect -s r -d 'Reconnect to host when connection is dropped'
complete -c gitea -n '__fish_seen_subcommand_from conn' -f -l protocol -s P -r -d 'Set protocol to use: tcp, unix, or udp (defaults to tcp)'
complete -c gitea -n '__fish_seen_subcommand_from conn' -f -l address -s a -r -d 'Host address and port to connect to (defaults to :7020)'
complete -c gitea -n '__fish_seen_subcommand_from conn' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from conn; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from add; and not __fish_seen_subcommand_from file conn help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from logging; and not __fish_seen_subcommand_from pause resume release-and-reopen remove add log-sql help h' -a 'log-sql' -d 'Set LogSQL'
complete -c gitea -n '__fish_seen_subcommand_from log-sql' -f -l debug
complete -c gitea -n '__fish_seen_subcommand_from log-sql' -f -l off -d 'Switch off SQL logging'
complete -c gitea -n '__fish_seen_subcommand_from log-sql' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from log-sql; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from logging; and not __fish_seen_subcommand_from pause resume release-and-reopen remove add log-sql help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from manager; and not __fish_seen_subcommand_from shutdown restart reload-templates flush-queues logging processes help h' -a 'processes' -d 'Display running processes within the current process'
complete -c gitea -n '__fish_seen_subcommand_from processes' -f -l debug
complete -c gitea -n '__fish_seen_subcommand_from processes' -f -l flat -d 'Show processes as flat table rather than as tree'
complete -c gitea -n '__fish_seen_subcommand_from processes' -f -l no-system -d 'Do not show system processes'
complete -c gitea -n '__fish_seen_subcommand_from processes' -f -l stacktraces -d 'Show stacktraces'
complete -c gitea -n '__fish_seen_subcommand_from processes' -f -l json -d 'Output as json'
complete -c gitea -n '__fish_seen_subcommand_from processes' -f -l cancel -r -d 'Process PID to cancel. (Only available for non-system processes.)'
complete -c gitea -n '__fish_seen_subcommand_from processes' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from processes; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from manager; and not __fish_seen_subcommand_from shutdown restart reload-templates flush-queues logging processes help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_gitea_no_subcommand' -a 'embedded' -d 'Extract embedded resources'
complete -c gitea -n '__fish_seen_subcommand_from embedded' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from embedded; and not __fish_seen_subcommand_from list view extract help h' -a 'list' -d 'List files matching the given pattern'
complete -c gitea -n '__fish_seen_subcommand_from list' -f -l include-vendored -s vendor -d 'Include files under public/vendor as well'
complete -c gitea -n '__fish_seen_subcommand_from list' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from list; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from embedded; and not __fish_seen_subcommand_from list view extract help h' -a 'view' -d 'View a file matching the given pattern'
complete -c gitea -n '__fish_seen_subcommand_from view' -f -l include-vendored -s vendor -d 'Include files under public/vendor as well'
complete -c gitea -n '__fish_seen_subcommand_from view' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from view; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from embedded; and not __fish_seen_subcommand_from list view extract help h' -a 'extract' -d 'Extract resources'
complete -c gitea -n '__fish_seen_subcommand_from extract' -f -l include-vendored -s vendor -d 'Include files under public/vendor as well'
complete -c gitea -n '__fish_seen_subcommand_from extract' -f -l overwrite -d 'Overwrite files if they already exist'
complete -c gitea -n '__fish_seen_subcommand_from extract' -f -l rename -d 'Rename files as {name}.bak if they already exist (overwrites previous .bak)'
complete -c gitea -n '__fish_seen_subcommand_from extract' -f -l custom -d 'Extract to the \'custom\' directory as per app.ini'
complete -c gitea -n '__fish_seen_subcommand_from extract' -f -l destination -s dest-dir -r -d 'Extract to the specified directory'
complete -c gitea -n '__fish_seen_subcommand_from extract' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from extract; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from embedded; and not __fish_seen_subcommand_from list view extract help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_gitea_no_subcommand' -a 'migrate-storage' -d 'Migrate the storage'
complete -c gitea -n '__fish_seen_subcommand_from migrate-storage' -f -l type -s t -r -d 'Type of stored files to copy.  Allowed types: \'attachments\', \'lfs\', \'avatars\', \'repo-avatars\', \'repo-archivers\', \'packages\', \'actions-log\', \'actions-artifacts'
complete -c gitea -n '__fish_seen_subcommand_from migrate-storage' -f -l storage -s s -r -d 'New storage type: local (default), minio or azureblob'
complete -c gitea -n '__fish_seen_subcommand_from migrate-storage' -f -l path -s p -r -d 'New storage placement if store is local (leave blank for default)'
complete -c gitea -n '__fish_seen_subcommand_from migrate-storage' -f -l minio-endpoint -r -d 'Minio storage endpoint'
complete -c gitea -n '__fish_seen_subcommand_from migrate-storage' -f -l minio-access-key-id -r -d 'Minio storage accessKeyID'
complete -c gitea -n '__fish_seen_subcommand_from migrate-storage' -f -l minio-secret-access-key -r -d 'Minio storage secretAccessKey'
complete -c gitea -n '__fish_seen_subcommand_from migrate-storage' -f -l minio-bucket -r -d 'Minio storage bucket'
complete -c gitea -n '__fish_seen_subcommand_from migrate-storage' -f -l minio-location -r -d 'Minio storage location to create bucket'
complete -c gitea -n '__fish_seen_subcommand_from migrate-storage' -f -l minio-base-path -r -d 'Minio storage base path on the bucket'
complete -c gitea -n '__fish_seen_subcommand_from migrate-storage' -f -l minio-use-ssl -d 'Enable SSL for minio'
complete -c gitea -n '__fish_seen_subcommand_from migrate-storage' -f -l minio-insecure-skip-verify -d 'Skip SSL verification'
complete -c gitea -n '__fish_seen_subcommand_from migrate-storage' -f -l minio-checksum-algorithm -r -d 'Minio checksum algorithm (default/md5)'
complete -c gitea -n '__fish_seen_subcommand_from migrate-storage' -f -l minio-bucket-lookup-type -r -d 'Minio bucket lookup type'
complete -c gitea -n '__fish_seen_subcommand_from migrate-storage' -f -l azureblob-endpoint -r -d 'Azure Blob storage endpoint'
complete -c gitea -n '__fish_seen_subcommand_from migrate-storage' -f -l azureblob-account-name -r -d 'Azure Blob storage account name'
complete -c gitea -n '__fish_seen_subcommand_from migrate-storage' -f -l azureblob-account-key -r -d 'Azure Blob storage account key'
complete -c gitea -n '__fish_seen_subcommand_from migrate-storage' -f -l azureblob-container -r -d 'Azure Blob storage container'
complete -c gitea -n '__fish_seen_subcommand_from migrate-storage' -f -l azureblob-base-path -r -d 'Azure Blob storage base path'
complete -c gitea -n '__fish_seen_subcommand_from migrate-storage' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from migrate-storage; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_gitea_no_subcommand' -a 'dump-repo' -d 'Dump the repository from git/github/gitea/gitlab'
complete -c gitea -n '__fish_seen_subcommand_from dump-repo' -f -l git_service -r -d 'Git service, git, github, gitea, gitlab. If clone_addr could be recognized, this could be ignored.'
complete -c gitea -n '__fish_seen_subcommand_from dump-repo' -f -l repo_dir -s r -r -d 'Repository dir path to store the data'
complete -c gitea -n '__fish_seen_subcommand_from dump-repo' -f -l clone_addr -r -d 'The URL will be clone, currently could be a git/github/gitea/gitlab http/https URL'
complete -c gitea -n '__fish_seen_subcommand_from dump-repo' -f -l auth_username -r -d 'The username to visit the clone_addr'
complete -c gitea -n '__fish_seen_subcommand_from dump-repo' -f -l auth_password -r -d 'The password to visit the clone_addr'
complete -c gitea -n '__fish_seen_subcommand_from dump-repo' -f -l auth_token -r -d 'The personal token to visit the clone_addr'
complete -c gitea -n '__fish_seen_subcommand_from dump-repo' -f -l owner_name -r -d 'The data will be stored on a directory with owner name if not empty'
complete -c gitea -n '__fish_seen_subcommand_from dump-repo' -f -l repo_name -r -d 'The data will be stored on a directory with repository name if not empty'
complete -c gitea -n '__fish_seen_subcommand_from dump-repo' -f -l units -r -d 'Which items will be migrated, one or more units should be separated as comma.
wiki, issues, labels, releases, release_assets, milestones, pull_requests, comments are allowed. Empty means all units.'
complete -c gitea -n '__fish_seen_subcommand_from dump-repo' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from dump-repo; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_gitea_no_subcommand' -a 'restore-repo' -d 'Restore the repository from disk'
complete -c gitea -n '__fish_seen_subcommand_from restore-repo' -f -l repo_dir -s r -r -d 'Repository dir path to restore from'
complete -c gitea -n '__fish_seen_subcommand_from restore-repo' -f -l owner_name -r -d 'Restore destination owner name'
complete -c gitea -n '__fish_seen_subcommand_from restore-repo' -f -l repo_name -r -d 'Restore destination repository name'
complete -c gitea -n '__fish_seen_subcommand_from restore-repo' -f -l units -r -d 'Which items will be restored, one or more units should be separated as comma.
wiki, issues, labels, releases, release_assets, milestones, pull_requests, comments are allowed. Empty means all units.'
complete -c gitea -n '__fish_seen_subcommand_from restore-repo' -f -l validation -d 'Sanity check the content of the files before trying to load them'
complete -c gitea -n '__fish_seen_subcommand_from restore-repo' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from restore-repo; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_gitea_no_subcommand' -a 'actions' -d 'Manage Gitea Actions'
complete -c gitea -n '__fish_seen_subcommand_from actions' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from actions; and not __fish_seen_subcommand_from generate-runner-token grt help h' -a 'generate-runner-token' -d 'Generate a new token for a runner to use to register with the server'
complete -c gitea -n '__fish_seen_subcommand_from generate-runner-token grt' -f -l scope -s s -r -d '{owner}[/{repo}] - leave empty for a global runner'
complete -c gitea -n '__fish_seen_subcommand_from generate-runner-token grt' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from generate-runner-token grt; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from actions; and not __fish_seen_subcommand_from generate-runner-token grt help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_gitea_no_subcommand' -a 'cert' -d 'Generate self-signed certificate'
complete -c gitea -n '__fish_seen_subcommand_from cert' -f -l host -r -d 'Comma-separated hostnames and IPs to generate a certificate for'
complete -c gitea -n '__fish_seen_subcommand_from cert' -f -l ecdsa-curve -r -d 'ECDSA curve to use to generate a key. Valid values are P224, P256, P384, P521'
complete -c gitea -n '__fish_seen_subcommand_from cert' -f -l rsa-bits -r -d 'Size of RSA key to generate. Ignored if --ecdsa-curve is set'
complete -c gitea -n '__fish_seen_subcommand_from cert' -f -l start-date -r -d 'Creation date formatted as Jan 1 15:04:05 2011'
complete -c gitea -n '__fish_seen_subcommand_from cert' -f -l duration -r -d 'Duration that certificate is valid for'
complete -c gitea -n '__fish_seen_subcommand_from cert' -f -l ca -d 'whether this cert should be its own Certificate Authority'
complete -c gitea -n '__fish_seen_subcommand_from cert' -f -l out -r -d 'Path to the file where there certificate will be saved'
complete -c gitea -n '__fish_seen_subcommand_from cert' -f -l keyout -r -d 'Path to the file where there certificate key will be saved'
complete -c gitea -n '__fish_seen_subcommand_from cert' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from cert; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_gitea_no_subcommand' -a 'generate' -d 'Generate Gitea\'s secrets/keys/tokens'
complete -c gitea -n '__fish_seen_subcommand_from generate' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from generate; and not __fish_seen_subcommand_from secret help h' -a 'secret' -d 'Generate a secret token'
complete -c gitea -n '__fish_seen_subcommand_from secret' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from secret; and not __fish_seen_subcommand_from INTERNAL_TOKEN JWT_SECRET LFS_JWT_SECRET SECRET_KEY help h' -a 'INTERNAL_TOKEN' -d 'Generate a new INTERNAL_TOKEN'
complete -c gitea -n '__fish_seen_subcommand_from INTERNAL_TOKEN' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from INTERNAL_TOKEN; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from secret; and not __fish_seen_subcommand_from INTERNAL_TOKEN JWT_SECRET LFS_JWT_SECRET SECRET_KEY help h' -a 'JWT_SECRET' -d 'Generate a new JWT_SECRET'
complete -c gitea -n '__fish_seen_subcommand_from JWT_SECRET LFS_JWT_SECRET' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from JWT_SECRET LFS_JWT_SECRET; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from secret; and not __fish_seen_subcommand_from INTERNAL_TOKEN JWT_SECRET LFS_JWT_SECRET SECRET_KEY help h' -a 'SECRET_KEY' -d 'Generate a new SECRET_KEY'
complete -c gitea -n '__fish_seen_subcommand_from SECRET_KEY' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from SECRET_KEY; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from secret; and not __fish_seen_subcommand_from INTERNAL_TOKEN JWT_SECRET LFS_JWT_SECRET SECRET_KEY help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_seen_subcommand_from generate; and not __fish_seen_subcommand_from secret help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -x -c gitea -n '__fish_gitea_no_subcommand' -a 'docs' -d 'Output CLI documentation'
complete -c gitea -n '__fish_seen_subcommand_from docs' -f -l man -d 'Output man pages instead'
complete -c gitea -n '__fish_seen_subcommand_from docs' -f -l output -s o -r -d 'Path to output to instead of stdout (will overwrite if exists)'
complete -c gitea -n '__fish_seen_subcommand_from docs' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from docs; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
complete -c gitea -n '__fish_seen_subcommand_from completion' -f -l help -s h -d 'show help'
complete -x -c gitea -n '__fish_seen_subcommand_from completion; and not __fish_seen_subcommand_from help h' -a 'help' -d 'Shows a list of commands or help for one command'
